# -*- mode: ruby -*-
# vi: set ft=ruby :

$vm_cpus = 1
$vm_memory = 1024

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/focal64"

  # config.ssh.private_key_path = "~/.ssh/id_rsa"
  config.ssh.insert_key = false
  config.ssh.forward_agent = true
  # config.ssh.username = "vagrant"
  # config.ssh.password = "vagrant"

  config.vm.provision "shell", inline: <<-SHELL
    sudo sed -i 's/^#[[:space:]]*PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config
    sudo sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config.d/60-cloudimg-settings.conf
    sudo systemctl restart sshd || sudo service ssh restart
  SHELL

  config.vm.network "forwarded_port", guest: 8081, host: 8081, auto_correct: true # for phpMyadmin
  config.vm.network "forwarded_port", guest: 8080, host: 8080, auto_correct: true # for Wordpress
  # guest "8080" because wordpress container running on 8080 by docker. Look at wordpress section in docker-compose.yml file

  config.vm.synced_folder ".", "/vagrant", disabled: true

  if Vagrant.has_plugin? 'vagrant-vbguest'
    config.vbguest.auto_update = false
  end

  config.vm.provider :virtualbox do |vb|
    vb.customize ["modifyvm", :id, "--usb", "on"]
    vb.customize ["modifyvm", :id, "--usbehci", "off"] 
    vb.customize ["modifyvm", :id, "--uart1", "0x3F8", "4"]
    vb.customize ["modifyvm", :id, "--uartmode1", "file", File::NULL]

    vb.gui = false
    vb.cpus = $vm_cpus
    vb.memory = $vm_memory
    vb.check_guest_additions = false
    vb.functional_vboxsf = false
  end

  config.vm.provision "shell", inline: <<-SHELL
     export DEBIAN_FRONTEND=noninteractive
     apt-get update -y
     apt-get install -y docker.io docker-compose wget
     systemctl enable docker
     wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
     tar -xvzf ngrok-v3-stable-linux-amd64.tgz -C /usr/bin
  SHELL
end
